Build started 2016/10/15 12:57:03.
     1>Project "D:\Program\ENFT\ENFT\ENFT.vcxproj" on node 2 (build target(s)).
     1>InitializeBuildStatus:
         Creating "x64\Release\ENFT.unsuccessfulbuild" because "AlwaysCreate" was specified.
       ClCompile:
         All outputs are up-to-date.
         D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\x86_amd64\CL.exe /c /I..\include\glut /I..\include\glew /I..\include\CVD /I..\include\clapack /I..\include\levmar /I.\FeatureTracking /I.\TrackMatching /I.\ProgramGL /I.\Sequence /I.\SequenceSet /I.\SfM /I.\Estimation /I.\Optimization /I.\LinearAlgebra /I.\Clustering /I.\Utility /I.\Viewing /I.\ /Zi /nologo /W3 /WX- /O2 /Oi /GL /D WIN32 /D NDEBUG /D _CONSOLE /D _MBCS /Gm- /EHsc /MD /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Yu"StdAfx.h" /Fp"x64\Release\ENFT.pch" /Fo"x64\Release\\" /Fd"x64\Release\vc100.pdb" /Gd /TP /errorReport:prompt ENFT.cpp FeatureTracking\FeatureExtractorSift.cpp FeatureTracking\FeatureTracker.cpp FeatureTracking\FeatureTrackerEnft.cpp FeatureTracking\FeatureTrackerFlowVoting.cpp FeatureTracking\FeatureTrackerIO.cpp FeatureTracking\FeatureTrackerSift.cpp LinearAlgebra\Matrix11.cpp LinearAlgebra\Matrix4.cpp LinearAlgebra\Matrix6.cpp LinearAlgebra\Matrix7.cpp LinearAlgebra\Matrix8.cpp ProgramGL\ProgramGL.cpp SequenceSet\SequenceSet.cpp SequenceSet\SequenceSetDataAssociation.cpp SequenceSet\SequenceSetFrame.cpp SequenceSet\SequenceSetIO.cpp SequenceSet\SequenceSetMeasurement.cpp SequenceSet\SequenceSetTrack.cpp Sequence\Sequence.cpp Sequence\SequenceDataAssociation.cpp Sequence\SequenceFrame.cpp Sequence\SequenceIO.cpp Sequence\SequenceMeasurement.cpp Sequence\SequenceSynthesis.cpp Sequence\SequenceTag.cpp Sequence\SequenceTrack.cpp Sequence\SequenceTransformation.cpp SfM\AbsoluteQuadricEstimator.cpp SfM\CameraArrayEPnP.cpp SfM\CameraEPnP.cpp SfM\EssentialMatrix.cpp SfM\EssentialMatrixFivePointAlgorithm.cpp SfM\FundamentalMatrix.cpp SfM\FundamentalMatrixEightPointAlgorithm.cpp SfM\Homography.cpp SfM\ProjectiveMatrix.cpp SfM\RelativeTranslationSolver.cpp SfM\RigidTransformationSolver.cpp SfM\RotationTransformationSolver.cpp TrackMatching\MatchingMatrix.cpp TrackMatching\TrackMatcher.cpp TrackMatching\TrackMatcherClustering.cpp TrackMatching\TrackMatcherEnft.cpp TrackMatching\TrackMatcherIO.cpp TrackMatching\TrackMatchingFeatureMatching.cpp Viewing\ViewerSequence.cpp Viewing\ViewerSequenceSet.cpp
         ENFT.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>d:\program\enft\enft\viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>ENFT.cpp(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>ENFT.cpp(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>ENFT.cpp(93): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>ENFT.cpp(95): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\ENFT\FeatureTracking\FeatureTracker.h(104) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
         FeatureExtractorSift.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
         FeatureTracker.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>d:\program\enft\enft\viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\utility(163): warning C4267: 'initializing' : conversion from 'size_t' to 'uint', possible loss of data
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\utility(247) : see reference to function template instantiation 'std::_Pair_base<_Ty1,_Ty2>::_Pair_base<const uint&,_Ty>(_Other1,_Other2 &&)' being compiled
                 with
                 [
                     _Ty1=uint,
                     _Ty2=uint,
                     _Ty=unsigned __int64,
                     _Other1=const uint &,
                     _Other2=unsigned __int64
                 ]
                 d:\program\enft\enft\utility\SparseVector.h(75) : see reference to function template instantiation 'std::pair<_Ty1,_Ty2>::pair<const uint&,unsigned __int64>(_Other1,_Other2 &&)' being compiled
                 with
                 [
                     _Ty1=uint,
                     _Ty2=uint,
                     _Other1=const uint &,
                     _Other2=unsigned __int64
                 ]
                 d:\program\enft\enft\utility\SparseVector.h(71) : while compiling class template member function 'FundamentalMatrix *SparseVector<TYPE>::Insert(const uint &,const TYPE &)'
                 with
                 [
                     TYPE=FundamentalMatrix *
                 ]
                 D:\Program\ENFT\ENFT\Utility\SparseMatrix.h(35) : see reference to class template instantiation 'SparseVector<TYPE>' being compiled
                 with
                 [
                     TYPE=FundamentalMatrix *
                 ]
                 D:\Program\ENFT\ENFT\Utility\SparseMatrix.h(31) : while compiling class template member function 'FundamentalMatrix *SparseMatrix<TYPE>::Get(const uint &,const uint &)'
                 with
                 [
                     TYPE=FundamentalMatrix *
                 ]
                 FeatureTracking\FeatureTracker.cpp(322) : see reference to class template instantiation 'SparseMatrix<TYPE>' being compiled
                 with
                 [
                     TYPE=FundamentalMatrix *
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 d:\program\enft\enft\featuretracking\FeatureTracker.h(104) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(237) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(269) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,std::istream &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 FeatureTracking\FeatureTracker.cpp(146) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 FeatureTracking\FeatureTracker.cpp(177) : see reference to function template instantiation 'void LoadImageA<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,CVD::Image<CVD::Rgb<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(240) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(253) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(255) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=float
                 ]
                 d:\program\enft\enft\featuretracking\FeatureTracker.h(105) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=float
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(248) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>
                 ]
         FeatureTrackerEnft.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>d:\program\enft\enft\viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 d:\program\enft\enft\featuretracking\FeatureTracker.h(104) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
         FeatureTrackerFlowVoting.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>d:\program\enft\enft\viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 d:\program\enft\enft\featuretracking\FeatureTracker.h(104) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
         FeatureTrackerIO.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>d:\program\enft\enft\viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>FeatureTracking\FeatureTrackerIO.cpp(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>FeatureTracking\FeatureTrackerIO.cpp(113): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 d:\program\enft\enft\featuretracking\FeatureTracker.h(104) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
         FeatureTrackerSift.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>d:\program\enft\enft\viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>FeatureTracking\FeatureTrackerSift.cpp(11): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 d:\program\enft\enft\featuretracking\FeatureTracker.h(104) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
         Matrix11.cpp
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
         Matrix4.cpp
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
         Matrix6.cpp
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
         Matrix7.cpp
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
         Matrix8.cpp
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
         ProgramGL.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
         SequenceSet.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         SequenceSetDataAssociation.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         SequenceSetFrame.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         SequenceSetIO.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>SequenceSet\SequenceSetIO.cpp(11): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>SequenceSet\SequenceSetIO.cpp(12): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>SequenceSet\SequenceSetIO.cpp(25): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>SequenceSet\SequenceSetIO.cpp(26): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>SequenceSet\SequenceSetIO.cpp(49): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>SequenceSet\SequenceSetIO.cpp(92): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>SequenceSet\SequenceSetIO.cpp(115): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         SequenceSetMeasurement.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         SequenceSetTrack.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         Sequence.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>Sequence\Sequence.cpp(106): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 Sequence\Sequence.cpp(92) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgb<CVD::byte>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgb<CVD::byte>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgb<CVD::byte>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgb<CVD::byte>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgb<CVD::byte>>::type,
                     T=CVD::Rgb<CVD::byte>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgb<CVD::byte>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgb<CVD::byte>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<CVD::Rgb<T>>(const CVD::BasicImage<CVD::Rgb<T>> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::byte,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<CVD::Rgb<T>>(const CVD::BasicImage<CVD::Rgb<T>> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::byte,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 Sequence\Sequence.cpp(114) : see reference to function template instantiation 'void CVD::img_save<CVD::Rgb<T>>(const CVD::BasicImage<CVD::Rgb<T>> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::byte,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(237) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(269) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,std::istream &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 Sequence\Sequence.cpp(113) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(240) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(253) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(255) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=float,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=float,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(248) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>
                 ]
         Compiling...
         SequenceDataAssociation.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
         SequenceFrame.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
         SequenceIO.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>Sequence\SequenceIO.cpp(76): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>Sequence\SequenceIO.cpp(77): warning C4996: 'access': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _access. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\io.h(299) : see declaration of 'access'
     1>Sequence\SequenceIO.cpp(83): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>Sequence\SequenceIO.cpp(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>Sequence\SequenceIO.cpp(97): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(108): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>Sequence\SequenceIO.cpp(225): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(396): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(524): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(537): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(538): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(554): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Sequence\SequenceIO.cpp(564): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Sequence\SequenceIO.cpp(565): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(569): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Sequence\SequenceIO.cpp(608): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(622): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(642): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(648): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(697): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>Sequence\SequenceIO.cpp(699): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(703): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>Sequence\SequenceIO.cpp(721): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(802): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(820): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Sequence\SequenceIO.cpp(824): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(829): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Sequence\SequenceIO.cpp(831): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(833): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Sequence\SequenceIO.cpp(850): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(902): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(926): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(934): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(938): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(982): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1036): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1077): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1094): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Sequence\SequenceIO.cpp(1096): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(1114): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(1120): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(1125): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(1182): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1273): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1291): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Sequence\SequenceIO.cpp(1293): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(1311): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(1317): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceIO.cpp(1375): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1483): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1554): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1567): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1585): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1604): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1638): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Sequence\SequenceIO.cpp(1969): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 Sequence\SequenceIO.cpp(33) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(237) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(269) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,std::istream &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 Sequence\SequenceIO.cpp(53) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(240) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=double
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=double
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=double
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=double,
                     ImageLoader=CVD::TEXT::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=double,
                     ImageLoader=CVD::TEXT::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::TEXT::reader,
                     List=CVD::TEXT::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::TEXT::reader,
                     List=CVD::TEXT::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::TEXT::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::TEXT::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(257) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::TEXT::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(253) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(255) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=float,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=float,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(248) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>
                 ]
         SequenceMeasurement.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
         SequenceSynthesis.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         SequenceTag.cpp
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>Sequence\SequenceTag.cpp(104): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>Sequence\SequenceTag.cpp(135): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceTag.cpp(136): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceTag.cpp(137): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>Sequence\SequenceTag.cpp(138): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 Sequence\SequenceTag.cpp(49) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(237) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(269) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,std::istream &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 Sequence\SequenceTag.cpp(31) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 Sequence\SequenceTag.cpp(52) : see reference to function template instantiation 'void LoadImageA<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,CVD::Image<CVD::Rgb<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(240) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=double
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=double
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=double
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=double,
                     ImageLoader=CVD::TEXT::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=double,
                     ImageLoader=CVD::TEXT::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::TEXT::reader,
                     List=CVD::TEXT::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::TEXT::reader,
                     List=CVD::TEXT::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::TEXT::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::TEXT::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(257) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::TEXT::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(253) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(255) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=float,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=float,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(248) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>
                 ]
         SequenceTrack.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         SequenceTransformation.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         AbsoluteQuadricEstimator.cpp
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         CameraArrayEPnP.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\CameraArrayCalibrationParameter.h(70): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         CameraEPnP.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         EssentialMatrix.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         EssentialMatrixFivePointAlgorithm.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         FundamentalMatrix.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         FundamentalMatrixEightPointAlgorithm.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         Homography.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         ProjectiveMatrix.cpp
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\linearalgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         RelativeTranslationSolver.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         RigidTransformationSolver.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         RotationTransformationSolver.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
         Compiling...
         MatchingMatrix.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\utility(163): warning C4267: 'initializing' : conversion from 'size_t' to 'uint', possible loss of data
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\utility(247) : see reference to function template instantiation 'std::_Pair_base<_Ty1,_Ty2>::_Pair_base<const _Ty&,unsigned __int64>(_Other1,_Other2 &&)' being compiled
                 with
                 [
                     _Ty1=uint,
                     _Ty2=uint,
                     _Ty=uint,
                     _Other1=const uint &,
                     _Other2=unsigned __int64
                 ]
                 d:\program\enft\enft\utility\SparseVector.h(75) : see reference to function template instantiation 'std::pair<_Ty1,_Ty2>::pair<const uint&,unsigned __int64>(_Other1,_Other2 &&)' being compiled
                 with
                 [
                     _Ty1=uint,
                     _Ty2=uint,
                     _Other1=const uint &,
                     _Other2=unsigned __int64
                 ]
                 d:\program\enft\enft\utility\SparseVector.h(71) : while compiling class template member function 'float *SparseVector<TYPE>::Insert(const uint &,const TYPE &)'
                 with
                 [
                     TYPE=float
                 ]
                 D:\Program\ENFT\ENFT\Utility\SparseMatrix.h(35) : see reference to class template instantiation 'SparseVector<TYPE>' being compiled
                 with
                 [
                     TYPE=float
                 ]
                 D:\Program\ENFT\ENFT\Utility\SparseMatrix.h(31) : while compiling class template member function 'float *SparseMatrix<TYPE>::Get(const uint &,const uint &)'
                 with
                 [
                     TYPE=float
                 ]
                 d:\program\enft\enft\trackmatching\MatchingMatrix.h(83) : see reference to class template instantiation 'SparseMatrix<TYPE>' being compiled
                 with
                 [
                     TYPE=float
                 ]
         TrackMatcher.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcher.cpp(344): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>TrackMatching\TrackMatcher.cpp(520): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=float
                 ]
                 d:\program\enft\enft\trackmatching\TrackMatcher.h(180) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=float
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=ushort
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=ushort
                 ]
                 d:\program\enft\enft\trackmatching\TrackMatcher.h(181) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=ushort
                 ]
     1>D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\utility(163): warning C4267: 'initializing' : conversion from 'size_t' to 'uint', possible loss of data
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\utility(247) : see reference to function template instantiation 'std::_Pair_base<_Ty1,_Ty2>::_Pair_base<const _Ty&,unsigned __int64>(_Other1,_Other2 &&)' being compiled
                 with
                 [
                     _Ty1=uint,
                     _Ty2=uint,
                     _Ty=uint,
                     _Other1=const uint &,
                     _Other2=unsigned __int64
                 ]
                 d:\program\enft\enft\utility\SparseVector.h(75) : see reference to function template instantiation 'std::pair<_Ty1,_Ty2>::pair<const uint&,unsigned __int64>(_Other1,_Other2 &&)' being compiled
                 with
                 [
                     _Ty1=uint,
                     _Ty2=uint,
                     _Other1=const uint &,
                     _Other2=unsigned __int64
                 ]
                 d:\program\enft\enft\utility\SparseVector.h(71) : while compiling class template member function 'float *SparseVector<TYPE>::Insert(const uint &,const TYPE &)'
                 with
                 [
                     TYPE=float
                 ]
                 D:\Program\ENFT\ENFT\Utility\SparseMatrix.h(28) : see reference to class template instantiation 'SparseVector<TYPE>' being compiled
                 with
                 [
                     TYPE=float
                 ]
                 D:\Program\ENFT\ENFT\Utility\SparseMatrix.h(24) : while compiling class template member function 'const float *SparseMatrix<TYPE>::Get(const uint &,const uint &) const'
                 with
                 [
                     TYPE=float
                 ]
                 d:\program\enft\enft\trackmatching\MatchingMatrix.h(83) : see reference to class template instantiation 'SparseMatrix<TYPE>' being compiled
                 with
                 [
                     TYPE=float
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(299) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::PNM::Writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
         TrackMatcherClustering.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(299) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::PNM::Writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
         TrackMatcherEnft.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(299) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::PNM::Writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
         TrackMatcherIO.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcherIO.cpp(643): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcherIO.cpp(666): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcherIO.cpp(670): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(675): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(681): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(694): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcherIO.cpp(724): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcherIO.cpp(728): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(733): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(739): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(743): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(749): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(762): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcherIO.cpp(798): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcherIO.cpp(802): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(807): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(813): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(819): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(823): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(829): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(843): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcherIO.cpp(859): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>TrackMatching\TrackMatcherIO.cpp(863): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>TrackMatching\TrackMatcherIO.cpp(868): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=float
                 ]
                 d:\program\enft\enft\trackmatching\TrackMatcher.h(180) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=float
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=ushort
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=ushort
                 ]
                 d:\program\enft\enft\trackmatching\TrackMatcher.h(181) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=ushort
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 TrackMatching\TrackMatcherIO.cpp(897) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(237) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(269) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,std::istream &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 TrackMatching\TrackMatcherIO.cpp(881) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 TrackMatching\TrackMatcherIO.cpp(900) : see reference to function template instantiation 'void LoadImageA<CVD::Rgb<T>>(CVD::Image<CVD::Rgb<T>> &,CVD::Image<CVD::Rgb<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(240) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(253) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(255) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(248) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgb<CVD::byte>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\cvd/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>,
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgb<CVD::byte>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>
                 ]
         TrackMatchingFeatureMatching.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(36): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(105) : see declaration of 'strcpy'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(37): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(43): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(45): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(46): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(71): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(82): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(87): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(89): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(91): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(101): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(112): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(130): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Configurator.h(131): warning C4996: 'strtok': This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\string.h(197) : see declaration of 'strtok'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(17): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(34): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(41): warning C4267: 'initializing' : conversion from 'size_t' to 'const int', possible loss of data
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(88): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(117): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(245): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(246): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(247): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(248): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(249): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(250): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(251): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(252): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(253): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\Utility\Utility.h(254): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>D:\Program\ENFT\ENFT\SfM\FundamentalMatrix.h(150): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(299) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::PNM::Writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\ENFT\Viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
         ViewerSequence.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>d:\program\enft\enft\viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Viewing\ViewerSequence.cpp(829): warning C4101: 'fy' : unreferenced local variable
     1>Viewing\ViewerSequence.cpp(1019): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'sprintf'
     1>Viewing\ViewerSequence.cpp(1036): warning C4996: 'gets': This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(277) : see declaration of 'gets'
     1>Viewing\ViewerSequence.cpp(1038): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Viewing\ViewerSequence.cpp(1044): warning C4996: 'gets': This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(277) : see declaration of 'gets'
     1>Viewing\ViewerSequence.cpp(1046): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Viewing\ViewerSequence.cpp(1058): warning C4996: 'gets': This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(277) : see declaration of 'gets'
     1>Viewing\ViewerSequence.cpp(1060): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Viewing\ViewerSequence.cpp(1072): warning C4996: 'gets': This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(277) : see declaration of 'gets'
     1>Viewing\ViewerSequence.cpp(1074): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Viewing\ViewerSequence.cpp(1082): warning C4996: 'gets': This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(277) : see declaration of 'gets'
     1>Viewing\ViewerSequence.cpp(1084): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>Viewing\ViewerSequence.cpp(1108): warning C4996: 'gets': This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(277) : see declaration of 'gets'
     1>Viewing\ViewerSequence.cpp(1110): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(299) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::PNM::Writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=bool
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=bool,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::PNM::Reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(237) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNM::Reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(269) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgba<T>>(CVD::Image<CVD::Rgba<T>> &,std::istream &)' being compiled
                 with
                 [
                     T=unsigned char
                 ]
                 Viewing\ViewerSequence.cpp(197) : see reference to function template instantiation 'void CVD::img_load<CVD::Rgba<T>>(CVD::Image<CVD::Rgba<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=unsigned char
                 ]
                 Viewing\ViewerSequence.cpp(218) : see reference to function template instantiation 'void LoadImageA<CVD::Rgba<T>>(CVD::Image<CVD::Rgba<T>> &,CVD::Image<CVD::Rgba<T>> &,const std::string &)' being compiled
                 with
                 [
                     T=unsigned char
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::byte
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=unsigned char,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::JPEG::reader,
                     List=CVD::JPEG::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::JPEG::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(240) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::JPEG::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=short,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<short,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::FITS::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(253) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::FITS::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_bggr
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::bayer_bggr,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_bggr,CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::CVDimage::reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(255) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::CVDimage::reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=unsigned short
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=unsigned short,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_rggb
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::bayer_rggb,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_rggb,CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=int
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=int,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<int,CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_grbg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::bayer_grbg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_grbg,CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<unsigned short>,
                     ImageLoader=CVD::PNM::Reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNM::Reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=float
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=float,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=float,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<float,CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::bayer_gbrg
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::bayer_gbrg,
                     ImageLoader=CVD::CVDimage::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::CVDimage::reader,
                     List=CVD::Internal::TypeList<CVD::bayer_gbrg,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::Head>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<unsigned short>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::Internal::TypeList<CVD::byte,CVD::Internal::TypeList<unsigned short,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::Head>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(267) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader,
                     List=CVD::PNG::png_reader::Types
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(284) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::BasicImage<T> &,ImageLoader &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::PNG::png_reader
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(248) : see reference to function template instantiation 'void CVD::Internal::readImage<I,CVD::PNG::png_reader>(CVD::Image<T> &,std::istream &)' being compiled
                 with
                 [
                     I=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<double,CVD::Internal::TypeList<CVD::Rgb<CVD::byte>,CVD::Internal::TypeList<CVD::Rgb<short>,CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<unsigned short>,CVD::Internal::TypeList<CVD::Rgb<int>,CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<float>,CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgb<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgb<double>,CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<short>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<short>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned char>,CVD::Internal::TypeList<CVD::Rgba<short>,CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<int>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<int>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<unsigned short>,CVD::Internal::TypeList<CVD::Rgba<int>,CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<float>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<float>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<float>,CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(187) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<double>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(186) : while compiling class template member function 'void CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>::exec(CVD::SubImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(240) : see reference to class template instantiation 'CVD::Internal::read_and_maybe_process<PixelType,DiskPixelType,ImageLoader>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     DiskPixelType=CVD::Rgba<double>,
                     ImageLoader=CVD::FITS::reader
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(235) : while compiling class template member function 'void CVD::Internal::Reader<PixelType,ImageLoader,List>::read(CVD::BasicImage<T> &,ImageLoader &)'
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>,
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(247) : see reference to class template instantiation 'CVD::Internal::Reader<PixelType,ImageLoader,List>' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     ImageLoader=CVD::FITS::reader,
                     List=CVD::Internal::TypeList<CVD::Rgba<double>,CVD::Internal::Head>
                 ]
         ViewerSequenceSet.cpp
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(115): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(116): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\LinearAlgebra\Matrix3.h(117): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(32): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\Point.h(91): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/win.h(5): warning C4005: '_WIN32_WINNT' : macro redefinition
                 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\SDKDDKVer.h(197) : see previous definition of '_WIN32_WINNT'
     1>d:\program\enft\enft\viewing\Viewer.h(57): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(70): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(83): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(96): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(109): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>d:\program\enft\enft\viewing\Viewer.h(121): warning C4996: 'vsprintf': This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(371) : see declaration of 'vsprintf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(248): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(253): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\IntrinsicMatrix.h(269): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\Plane.h(55): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(453): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(454): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(455): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(253) : see declaration of 'fscanf'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(459): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>d:\program\enft\enft\sfm\RigidTransformation.h(471): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(261): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\SimilarityTransformation.h(268): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(406): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(420): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\Match.h(548): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(201): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>D:\Program\ENFT\ENFT\SfM\CameraEstimatorData.h(212): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(234) : see declaration of 'fopen'
     1>Viewing\ViewerSequenceSet.cpp(434): warning C4996: 'gets': This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(277) : see declaration of 'gets'
     1>Viewing\ViewerSequenceSet.cpp(436): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdio.h(325) : see declaration of 'sscanf'
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(188) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::PNM::Writer,
                     OutgoingPixel=CVD::Rgb<CVD::byte>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(299) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::PNM::Writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(331) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,std::ostream &,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(336) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,CVD::ImageType::ImageType,CVD::ImageType::ImageType,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 d:\program\enft\enft\viewing\Viewer.h(191) : see reference to function template instantiation 'void CVD::img_save<T>(const CVD::BasicImage<T> &,const std::string &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
     1>D:\Program\ENFT\include\CVD\cvd/internal/aligned_mem.h(102): warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
                 D:\Program\ENFT\include\CVD\CVD/image.h(756) : see reference to function template instantiation 'T *CVD::Internal::aligned_alloc<T>(size_t,size_t)' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image.h(739) : while compiling class template member function 'CVD::Image<T>::Image(const CVD::ImageRef &)'
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(313) : see reference to class template instantiation 'CVD::Image<T>' being compiled
                 with
                 [
                     T=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(311) : while compiling class template member function 'void CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>::write(std::ostream &,const CVD::SubImage<T> &,const std::map<_Kty,_Ty> &)'
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
                 D:\Program\ENFT\include\CVD\cvd/internal/load_and_save.h(348) : see reference to class template instantiation 'CVD::Internal::maybe_process_and_write<Pixel,ImageWriter,OutgoingPixel>' being compiled
                 with
                 [
                     Pixel=CVD::Rgba<unsigned char>,
                     ImageWriter=CVD::TEXT::writer,
                     OutgoingPixel=CVD::TEXT::writer::Outgoing<CVD::Rgba<unsigned char>>::type
                 ]
                 D:\Program\ENFT\include\CVD\CVD/image_io.h(311) : see reference to function template instantiation 'void CVD::Internal::writeImage<PixelType,CVD::TEXT::writer>(const CVD::SubImage<T> &,std::ostream &,const std::map<_Kty,_Ty> &)' being compiled
                 with
                 [
                     PixelType=CVD::Rgba<unsigned char>,
                     T=CVD::Rgba<unsigned char>,
                     _Kty=std::string,
                     _Ty=CVD::Parameter<void>
                 ]
       Link:
         D:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\x86_amd64\link.exe /ERRORREPORT:PROMPT /OUT:"D:\Program\ENFT\x64\Release\ENFT.exe" /INCREMENTAL:NO /NOLOGO /LIBPATH:../lib glut32.lib glew32.lib libcvd_r_vc10_x64.lib blas_r_vc10_x64.lib lapack_r_vc10_x64.lib libf2c_r_vc10_x64.lib levmar_r_vc10_x64.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /ManifestFile:"x64\Release\ENFT.exe.intermediate.manifest" /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /DEBUG /PDB:"D:\Program\ENFT\x64\Release\ENFT.pdb" /SUBSYSTEM:CONSOLE /OPT:REF /OPT:ICF /LTCG /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:\Program\ENFT\x64\Release\ENFT.lib" /MACHINE:X64 x64\Release\ENFT.obj
         x64\Release\FeatureExtractorSift.obj
         x64\Release\FeatureTracker.obj
         x64\Release\FeatureTrackerEnft.obj
         x64\Release\FeatureTrackerFlowVoting.obj
         x64\Release\FeatureTrackerIO.obj
         x64\Release\FeatureTrackerSift.obj
         x64\Release\Matrix11.obj
         x64\Release\Matrix3.obj
         x64\Release\Matrix4.obj
         x64\Release\Matrix5.obj
         x64\Release\Matrix6.obj
         x64\Release\Matrix7.obj
         x64\Release\Matrix8.obj
         x64\Release\MatrixMxN.obj
         x64\Release\ProgramGL.obj
         x64\Release\SequenceSet.obj
         x64\Release\SequenceSetDataAssociation.obj
         x64\Release\SequenceSetFrame.obj
         x64\Release\SequenceSetIO.obj
         x64\Release\SequenceSetMeasurement.obj
         x64\Release\SequenceSetTrack.obj
         x64\Release\Sequence.obj
         x64\Release\SequenceDataAssociation.obj
         x64\Release\SequenceFrame.obj
         x64\Release\SequenceIO.obj
         x64\Release\SequenceMeasurement.obj
         x64\Release\SequenceSynthesis.obj
         x64\Release\SequenceTag.obj
         x64\Release\SequenceTrack.obj
         x64\Release\SequenceTransformation.obj
         x64\Release\AbsoluteQuadricEstimator.obj
         x64\Release\CameraArrayEPnP.obj
         x64\Release\CameraEPnP.obj
         x64\Release\EssentialMatrix.obj
         x64\Release\EssentialMatrixFivePointAlgorithm.obj
         x64\Release\FundamentalMatrix.obj
         x64\Release\FundamentalMatrixEightPointAlgorithm.obj
         x64\Release\Homography.obj
         x64\Release\HomographySolver.obj
         x64\Release\PlaneSolver.obj
         x64\Release\Point3DSolver.obj
         x64\Release\ProjectiveMatrix.obj
         x64\Release\ProjectiveMatrixSolver.obj
         x64\Release\RelativeTranslationSolver.obj
         x64\Release\RigidTransformationSolver.obj
         x64\Release\RotationTransformationSolver.obj
         x64\Release\SimilarityTransformationSolver.obj
         x64\Release\TranslationSolver.obj
         x64\Release\stdafx.obj
         x64\Release\MatchingMatrix.obj
         x64\Release\TrackMatcher.obj
         x64\Release\TrackMatcherClustering.obj
         x64\Release\TrackMatcherEnft.obj
         x64\Release\TrackMatcherIO.obj
         x64\Release\TrackMatchingFeatureMatching.obj
         x64\Release\Polynomial.obj
         x64\Release\Random.obj
         x64\Release\ViewerSequence.obj
         x64\Release\ViewerSequenceSet.obj
            Creating library D:\Program\ENFT\x64\Release\ENFT.lib and object D:\Program\ENFT\x64\Release\ENFT.exp
         Generating code
         Finished generating code
     1>libcvd_r_vc10_x64.lib(jerror.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jerror.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdmarker.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdmarker.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdapimin.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdapimin.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcapimin.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcapimin.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdapistd.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdapistd.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcapistd.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcapistd.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcparam.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcparam.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcomapi.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcomapi.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jutils.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jutils.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdinput.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdinput.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jmemmgr.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jmemmgr.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcmarker.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcmarker.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdmaster.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdmaster.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcinit.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcinit.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jmemansi.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jmemansi.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdhuff.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdhuff.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jquant1.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jquant1.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jddctmgr.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jddctmgr.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdsample.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdsample.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdphuff.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdphuff.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdcolor.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdcolor.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdcoefct.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdcoefct.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jquant2.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jquant2.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdmerge.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdmerge.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdmainct.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdmainct.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jdpostct.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jdpostct.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jccolor.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jccolor.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcmainct.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcmainct.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcmaster.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcmaster.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jccoefct.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jccoefct.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcprepct.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcprepct.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcdctmgr.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcdctmgr.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcsample.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcsample.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jcphuff.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jcphuff.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jchuff.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jchuff.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jidctred.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jidctred.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jidctflt.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jidctflt.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jidctfst.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jidctfst.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jidctint.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jidctint.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jfdctflt.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jfdctflt.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jfdctint.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jfdctint.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
     1>libcvd_r_vc10_x64.lib(jfdctfst.obj) : warning LNK4099: PDB 'vc100.pdb' was not found with 'libcvd_r_vc10_x64.lib(jfdctfst.obj)' or at 'D:\Program\ENFT\x64\Release\vc100.pdb'; linking object as if no debug info
         ENFT.vcxproj -> D:\Program\ENFT\x64\Release\ENFT.exe
       Manifest:
         C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\bin\mt.exe /nologo /verbose /outputresource:"D:\Program\ENFT\x64\Release\ENFT.exe;#1" /manifest x64\Release\ENFT.exe.intermediate.manifest
       FinalizeBuildStatus:
         Deleting file "x64\Release\ENFT.unsuccessfulbuild".
         Touching "x64\Release\ENFT.lastbuildstate".
     1>Done Building Project "D:\Program\ENFT\ENFT\ENFT.vcxproj" (build target(s)).

Build succeeded.

Time Elapsed 00:00:56.62
